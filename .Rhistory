logistic=f.logistic(seq(0:39),fit2_dpc$a[1],fit2_dpc$mu[1],fit2_dpc$lambda[1])) %>%
gather('fit','value',-c(day,data))
forecast
#Prepare for plot
forecast <-
p<-ggplot(forecast,aes(data,value,color='fit')) +
geom_line() +
theme_light()
p
#Create forecasts
forecast <- tibble(day=(seq(40)-1)) %>%
mutate(data=firstday+day,
gompertz=f.gompertz(day,fit1_dpc$a[1],fit1_dpc$mu[1],fit1_dpc$lambda[1]),
logistic=f.logistic(day,fit2_dpc$a[1],fit2_dpc$mu[1],fit2_dpc$lambda[1])) %>%
gather('fit','value',-c(day,data))
fit2_dpc
f.gompertz(day,fit1_dpc$a[1],fit1_dpc$mu[1],fit1_dpc$lambda[1])
f.gompertz(seq(0:39),fit1_dpc$a[1],fit1_dpc$mu[1],fit1_dpc$lambda[1])
plot(f.gompertz(seq(0:39),fit1_dpc$a[1],fit1_dpc$mu[1],fit1_dpc$lambda[1]))
plot(f.gompertz(seq(0:60),fit1_dpc$a[1],fit1_dpc$mu[1],fit1_dpc$lambda[1]))
plot(f.gompertz(seq(0:60),fit2_dpc$a[1],fit2_dpc$mu[1],fit2_dpc$lambda[1]))
plot(f.logistic(seq(0:60),fit2_dpc$a[1],fit2_dpc$mu[1],fit2_dpc$lambda[1]))
forecast
#Prepare for plot
forecast <-
p<-ggplot(forecast,aes(data,value,color='fit')) +
geom_point() +
theme_light()
p
p<-ggplot(forecast,aes(data,value) +
#Prepare for plot
forecast <-
p<-ggplot(forecast,aes(data,value)) +
geom_point() +
theme_light()
)
#Prepare for plot
forecast <-
p<-ggplot(forecast,aes(data,value)) +
geom_point() +
theme_light()
#Prepare for plot
forecast <-
p<-ggplot(forecast,aes(data,value)) +
geom_point() +
theme_light()
p<-ggplot(forecast,aes(data,value)) +
geom_point() +
theme_light()
#Create forecasts
forecast <- tibble(day=(seq(40)-1)) %>%
mutate(data=firstday+day,
gompertz=f.gompertz(day,fit1_dpc$a[1],fit1_dpc$mu[1],fit1_dpc$lambda[1]),
logistic=f.logistic(day,fit2_dpc$a[1],fit2_dpc$mu[1],fit2_dpc$lambda[1])) %>%
gather('fit','value',-c(day,data))
p<-ggplot(forecast,aes(data,value)) +
geom_point() +
theme_light()
p
p<-ggplot(as.data.frame(forecast),aes(data,value)) +
geom_point() +
theme_light()
p
p<-ggplot(as.data.frame(forecast),aes(data,value,color='fit')) +
geom_point() +
theme_light()
p
p<-ggplot(as.data.frame(forecast),aes(data,value),color='fit') +
geom_point() +
theme_light()
p
p<-ggplot(forecast,aes(data,value,color=fit)) +
geom_point() +
theme_light()
p
p<-ggplot(forecast,aes(data,value,color=fit)) +
geom_line() +
theme_light()
p
#Create forecasts
forecast <- tibble(day=(seq(60)-1)) %>%
mutate(data=firstday+day,
gompertz=f.gompertz(day,fit1_dpc$a[1],fit1_dpc$mu[1],fit1_dpc$lambda[1]),
logistic=f.logistic(day,fit2_dpc$a[1],fit2_dpc$mu[1],fit2_dpc$lambda[1])) %>%
gather('fit','value',-c(day,data))
p<-ggplot(forecast,aes(data,value,color=fit)) +
geom_line() +
theme_light()
p
#Create forecasts
forecast <- tibble(day=(seq(90)-1)) %>%
mutate(data=firstday+day,
gompertz=f.gompertz(day,fit1_dpc$a[1],fit1_dpc$mu[1],fit1_dpc$lambda[1]),
logistic=f.logistic(day,fit2_dpc$a[1],fit2_dpc$mu[1],fit2_dpc$lambda[1])) %>%
gather('fit','value',-c(day,data))
p<-ggplot(forecast,aes(data,value,color=fit)) +
geom_line() +
theme_light()
p
tbw_dpc
p<-ggplot(forecast,aes(data,value,color=fit)) +
geom_line() +
geom_point(tbw_dpc,aes(data,deceduti,color='black'))
p<-ggplot(forecast,aes(data,value,color=fit)) +
geom_line() +
geom_point(tbw_dpc,aes(data,deceduti,color='black')) +
theme_light()
p<-ggplot(forecast,aes(data,value,color=fit)) +
geom_line() +
geom_point(tbw_dpc,aes(data,deceduti,color='black')) +
theme_light()
p<-ggplot(forecast,aes(data,value,color=fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(data,deceduti,color='black')) +
theme_light()
p
tbw_dpc %>% left_join(forecasts,by=data)
tbw_dpc %>% left_join(forecast,by=data)
left_join(tbw_dpc,forecast,by=data)
left_join(tbw_dpc,forecast,by=forecast$data)
left_join(tbw_dpc,forecast)
#Create forecasts
forecast <- tibble(day=(seq(90)-1)) %>%
mutate(data=firstday+day,
gompertz=f.gompertz(day,fit1_dpc$a[1],fit1_dpc$mu[1],fit1_dpc$lambda[1]),
logistic=f.logistic(day,fit2_dpc$a[1],fit2_dpc$mu[1],fit2_dpc$lambda[1]))
left_join(tbw_dpc,forecast)
left_join(tbw_dpc,forecast,by=forecast$data)
#Create forecasts
forecast <- tibble(day=(seq(90)-1)) %>%
mutate(data=firstday+day,
gompertz=f.gompertz(day,fit1_dpc$a[1],fit1_dpc$mu[1],fit1_dpc$lambda[1]),
logistic=f.logistic(day,fit2_dpc$a[1],fit2_dpc$mu[1],fit2_dpc$lambda[1]))%>%
gather('fit','value',-c(day,data))
p<-ggplot(forecast,aes(data,value,color=fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(data,deceduti,color='black')) +
theme_light()
p
p<-ggplot(forecast,aes(data,value,color=fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(as.Date(data),deceduti,color='black')) +
theme_light()
p
p<-ggplot(forecast,aes(data,value,color=fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(as.Date(data),deceduti),color='black') +
theme_light()
p
source('~/R/covid/mod_italy.R')
p
p
source('~/R/covid/mod_italy.R')
p
p<-ggplot(forecast,aes(data,value,color=Fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(as.Date(data),deceduti),color='black') +
coord_trans(y='log10') +
labs(
title = 'COVID19 - Previsione',
subtitle = paste0('Aggiornamento: ',today),
caption = paste0('Data: ', dataURL)
) +
theme_light()
p<-ggplot(forecast,aes(data,value,color=Fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(as.Date(data),deceduti),color='black') +
coord_trans(y='log10') +
labs(
title = 'COVID19 - Previsione',
subtitle = paste0('Aggiornamento: ',today()),
caption = paste0('Data: ', dataURL)
) +
theme_light()
source('~/R/covid/mod_italy.R')
ggsave('./PLOT/COVID19_previsione_italia.png',p)
source('~/R/covid/mod_italy.R')
source('~/R/covid/mod_italy.R')
source('~/R/covid/mod_italy.R')
p
forecast <- tibble(day=(seq(90)-1)) %>%
mutate(data=firstday+day,
Gompertz=f.gompertz(day,fit1_dpc$a[1],fit1_dpc$mu[1],fit1_dpc$lambda[1]),
Logistic=f.logistic(day,fit2_dpc$a[1],fit2_dpc$mu[1],fit2_dpc$lambda[1]))%>%
gather('Fit','Deceduti',-c(day,data)) %>%
group_by(Fit)
forecast
map(forecast,max)
group_map(forecast,max)
forecast %>% group_map(~,max(.x
))
forecast %>% group_map(~,max(.x))
forecast %>% group_map(~.x,max(.x))
forecast %>% group_map(~.x,max)
group_map(forecast,max)
forecast %>% group_map(~ max)
forecast %>% group_map(~ max())
forecast %>% group_map(~ max(.x))
forecast %>% group_map(~ max(.x$Deceduti))
forecast %>% as.dataframe(group_map(~ max(.x$Deceduti)))
forecast %>% as.data.frame(group_map(~ max(.x$Deceduti)))
forecast %>% as.dataframe(group_map(~ max(.x$Deceduti)))
forecast %>% as.data.frame(group_map(~ max(.x$Deceduti)))
as.data.frame(group_map(forecast, ~ max(.x$Deceduti)))
as.data.frame(group_map(forecast, max(.x$Deceduti)))
as.data.frame(group_map(forecast, max(Deceduti)))
summarise(forecast,max
)
summarise(forecast,max)
summarise_at(forecast,deceduti,max)
summarise_at(forecast,Deceduti,max)
forecast <- tibble(day=(seq(90)-1)) %>%
mutate(data=firstday+day,
Gompertz=f.gompertz(day,fit1_dpc$a[1],fit1_dpc$mu[1],fit1_dpc$lambda[1]),
Logistic=f.logistic(day,fit2_dpc$a[1],fit2_dpc$mu[1],fit2_dpc$lambda[1]))%>%
gather('Fit','Deceduti',-c(day,data)) %>%
group_by(Fit)
head(forecast)
forecast <- tibble(day=(seq(90)-1)) %>%
mutate(data=firstday+day,
Gompertz=f.gompertz(day,fit1_dpc$a[1],fit1_dpc$mu[1],fit1_dpc$lambda[1]),
Logistic=f.logistic(day,fit2_dpc$a[1],fit2_dpc$mu[1],fit2_dpc$lambda[1]))%>%
gather('Fit','Deceduti',-c(day,data)) %>%
group_by(Fit)
head(forecast)
# Data: https://github.com/DavideMagno/ItalianCovidData.git
library(tidyverse)
library(lubridate)
source('f_fitfunctions.r')
############
# Read Data
############
firstday <- ymd("2020-02-24")
lastday  <- today() - 1
dataURL<-'https://github.com/pcm-dpc/COVID-19/tree/master/dati-regioni'
gitURL<-'https://github.com/sandrocalmanti/covid'
cal <- as.Date(firstday - 1 + seq(firstday:lastday))
fileURL <- paste0("https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni-",
paste0(year(cal),sprintf("%02d",month(cal)),sprintf("%02d",day(cal))),
".csv")
#################
# Prepare summary
#################
tbw_dpc <- as_tibble(bind_rows(map(fileURL,read.csv)) ) %>%
group_by(data)  %>%
select(-stato,-codice_regione,-denominazione_regione,-lat,-long) %>%
summarise_all(sum) %>%
mutate(day = as.numeric(as.Date(data)-min(as.Date(data))),
Country='Italy')
#################
# Non-linear fit
#################
fit1 <- fit.gompertz(tbw_dpc$deceduti,tbw$day,tbw$Country)
fit2 <- fit.logistic(tbw_dpc$deceduti,tbw$day,tbw$Country)
#Extract coefficients and confidence
fit1_dpc <- broom::tidy(fit1) %>%  gather("coef", "value", 2:ncol(fit1_tbc)) %>%    spread(term, value)
fit2_dpc <- broom::tidy(fit2) %>%  gather("coef", "value", 2:ncol(fit1_tbc)) %>%    spread(term, value)
##################
# Prepare forecast
##################
forecast <- tibble(day=(seq(90)-1)) %>%
mutate(data=firstday+day,
Gompertz=f.gompertz(day,fit1_dpc$a[1],fit1_dpc$mu[1],fit1_dpc$lambda[1]),
Logistic=f.logistic(day,fit2_dpc$a[1],fit2_dpc$mu[1],fit2_dpc$lambda[1]))%>%
gather('Fit','Deceduti',-c(day,data)) %>%
group_by(Fit)
head(forecast)
forecast
summarise_at(forecast,Deceduti,max)
summarize_at(forecast,Deceduti,max)
dplyr::summarize_at(forecast,Deceduti,max)
summarize_at(forecast,forecast$Deceduti,max)
summarize(forecast$Deceduti,max)
dplyr::summarize(forecast$Deceduti,max)
forecast$Deceduti
forecast
max <- forecast %>% select(-day,-dat) %>% summarize_all(max)
maxfit <- forecast %>% select(-day,-data) %>% summarize_all(max)
maxfit
p<-ggplot(forecast,aes(data,Deceduti,color=Fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(as.Date(data),deceduti),color='black') +
coord_trans(y='log10') +
xlab('')+
labs(
title = 'COVID19 - Previsione',
subtitle = paste0('Aggiornamento: ',today()),
caption = paste0('Data: ', dataURL)
) +
annotate('text',x=as.Date('2020-01-05'),y=100,label=a)
p<-ggplot(forecast,aes(data,Deceduti,color=Fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(as.Date(data),deceduti),color='black') +
coord_trans(y='log10') +
xlab('')+
labs(
title = 'COVID19 - Previsione',
subtitle = paste0('Aggiornamento: ',today()),
caption = paste0('Data: ', dataURL)
) +
annotate('text',x=as.Date('2020-01-05'),y=100,label=a)+
theme_light()
p
p<-ggplot(forecast,aes(data,Deceduti,color=Fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(as.Date(data),deceduti),color='black') +
coord_trans(y='log10') +
xlab('')+
labs(
title = 'COVID19 - Previsione',
subtitle = paste0('Aggiornamento: ',today()),
caption = paste0('Data: ', dataURL)
) +
annotate('text',x=as.Date('2020-01-05'),y=100,label='a')+
theme_light()
p
p<-ggplot(forecast,aes(data,Deceduti,color=Fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(as.Date(data),deceduti),color='black') +
coord_trans(y='log10') +
xlab('')+
labs(
title = 'COVID19 - Previsione',
subtitle = paste0('Aggiornamento: ',today()),
caption = paste0('Data: ', dataURL)
) +
annotate('text',x=as.Date('2020-05-01'),y=100,label=maxfit)+
theme_light()
p
as.table(maxfit)
maxfit
p<-ggplot(forecast,aes(data,Deceduti,color=Fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(as.Date(data),deceduti),color='black') +
coord_trans(y='log10') +
xlab('')+
labs(
title = 'COVID19 - Previsione',
subtitle = paste0('Aggiornamento: ',today()),
caption = paste0('Data: ', dataURL)
) +
annotate('text',x=as.Date('2020-05-01'),y=100,label=maxfit$Fit)+
theme_light()
p
apply(maxfit, 1, paste, collapse="")
apply(maxfit, 1, paste, collapse="\n")
apply(maxfit, 1, paste, collapse=" \n")
apply(maxfit$Fit, 1, paste, collapse=" \n")
apply(maxfit$Fit, 1, paste, collapse="\n")
sapply(maxfit$Fit, 1, paste, collapse="\n")
lapply(maxfit$Fit, 1, paste, collapse="\n")
apply(maxfit$Fit, 1, paste, collapse="\n")
apply(maxfit, 1, paste, collapse="\n")
apply(maxfit, 2, paste, collapse="\n")
apply(maxfit, 3, paste, collapse="\n")
collapse(maxfit)
collapse(maxfit$Fit)
dplyr::filter(maxfit,Fit='Gompertz')
dplyr::filter(maxfit,Fit=='Gompertz')
dplyr::pull(filter(maxfit,Fit=='Gompertz'),Deceduti)
floor(dplyr::pull(filter(maxfit,Fit=='Gompertz'),Deceduti))
p<-ggplot(forecast,aes(data,Deceduti,color=Fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(as.Date(data),deceduti),color='black') +
coord_trans(y='log10') +
xlab('')+
labs(
title = 'COVID19 - Previsione',
subtitle = paste0('Aggiornamento: ',today()),
caption = paste0('Data: ', dataURL)
) +
annotate('text',x=as.Date('2020-05-01'),y=100,label=paste0('Gompertz',floor(dplyr::pull(filter(maxfit,Fit=='Gompertz'),Deceduti))))+
annotate('text',x=as.Date('2020-05-01'),y=100,label=paste0('Logistic',floor(dplyr::pull(filter(maxfit,Fit=='Logistic'),Deceduti))))+
theme_light()
p
p<-ggplot(forecast,aes(data,Deceduti,color=Fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(as.Date(data),deceduti),color='black') +
coord_trans(y='log10') +
xlab('')+
labs(
title = 'COVID19 - Previsione',
subtitle = paste0('Aggiornamento: ',today()),
caption = paste0('Data: ', dataURL)
) +
annotate('text',x=as.Date('2020-05-01'),y=100,label=paste0('Gompertz',floor(dplyr::pull(filter(maxfit,Fit=='Gompertz'),Deceduti))))+
annotate('text',x=as.Date('2020-05-01'),y=50,label=paste0('Logistic',floor(dplyr::pull(filter(maxfit,Fit=='Logistic'),Deceduti))))+
theme_light()
p
ggsave('./PLOT/COVID19_previsione_italia.png',p)
p<-ggplot(forecast,aes(data,Deceduti,color=Fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(as.Date(data),deceduti),color='black') +
coord_trans(y='log10') +
xlab('')+
labs(
title = 'COVID19 - Previsione',
subtitle = paste0('Aggiornamento: ',today()),
caption = paste0('Data: ', dataURL)
) +
annotate('text',x=as.Date('2020-05-01'),y=100,label=paste0('Max. Gompertz ~ ',floor(dplyr::pull(filter(maxfit,Fit=='Gompertz'),Deceduti))))+
annotate('text',x=as.Date('2020-05-01'),y=50,label=paste0('Max. Logistic ~ ',floor(dplyr::pull(filter(maxfit,Fit=='Logistic'),Deceduti))))+
theme_light()
p
p<-ggplot(forecast,aes(data,Deceduti,color=Fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(as.Date(data),deceduti),color='black') +
coord_trans(y='log10') +
xlab('')+
labs(
title = 'COVID-19 Italia - Previsione',
subtitle = paste0('Aggiornamento: ',today()),
caption = paste0('Data: ', dataURL)
) +
annotate('text',x=as.Date('2020-05-01'),y=100,label=paste0('Max. Gompertz ~ ',floor(dplyr::pull(filter(maxfit,Fit=='Gompertz'),Deceduti))))+
annotate('text',x=as.Date('2020-05-01'),y=50,label=paste0('Max. Logistic ~ ',floor(dplyr::pull(filter(maxfit,Fit=='Logistic'),Deceduti))))+
theme_light()
p
ggsave('./PLOT/COVID19_previsione_italia.png',p)
p<-ggplot(forecast,aes(data,Deceduti,color=Fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(as.Date(data),deceduti),color='black') +
coord_trans(y='log10') +
xlab('')+
labs(
title = 'COVID-19 Italia - Previsione',
subtitle = paste0('Aggiornamento: ',today()),
caption = paste0('Data: ', dataURL ,'\n pippo')
) +
annotate('text',x=as.Date('2020-05-01'),y=100,label=paste0('Max. Gompertz ~ ',floor(dplyr::pull(filter(maxfit,Fit=='Gompertz'),Deceduti))))+
annotate('text',x=as.Date('2020-05-01'),y=50,label=paste0('Max. Logistic ~ ',floor(dplyr::pull(filter(maxfit,Fit=='Logistic'),Deceduti))))+
theme_light()
p
p<-ggplot(forecast,aes(data,Deceduti,color=Fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(as.Date(data),deceduti),color='black') +
coord_trans(y='log10') +
xlab('')+
labs(
title = 'COVID-19 Italia - Previsione',
subtitle = paste0('Aggiornamento: ',today()),
caption = paste0('Data: ', dataURL ,'\n Codice R:',gitURL)
) +
annotate('text',x=as.Date('2020-05-01'),y=100,label=paste0('Max. Gompertz ~ ',floor(dplyr::pull(filter(maxfit,Fit=='Gompertz'),Deceduti))))+
annotate('text',x=as.Date('2020-05-01'),y=50,label=paste0('Max. Logistic ~ ',floor(dplyr::pull(filter(maxfit,Fit=='Logistic'),Deceduti))))+
theme_light()
p
p<-ggplot(forecast,aes(data,Deceduti,color=Fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(as.Date(data),deceduti),color='black') +
coord_trans(y='log10') +
xlab('')+
labs(
title = 'COVID-19 Italia - Previsione',
subtitle = paste0('Aggiornamento: ',today()),
caption = paste0('Data: ', dataURL ,'\n Rproject:',gitURL)
) +
annotate('text',x=as.Date('2020-05-01'),y=100,label=paste0('Max. Gompertz ~ ',floor(dplyr::pull(filter(maxfit,Fit=='Gompertz'),Deceduti))))+
annotate('text',x=as.Date('2020-05-01'),y=50,label=paste0('Max. Logistic ~ ',floor(dplyr::pull(filter(maxfit,Fit=='Logistic'),Deceduti))))+
theme_light()
p
ggsave('./PLOT/COVID19_previsione_italia.png',p)
p<-ggplot(forecast,aes(data,Deceduti,color=Fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(as.Date(data),deceduti),color='black') +
xlab('')+
labs(
title = 'COVID-19 Italia - Previsione',
subtitle = paste0('Aggiornamento: ',today()),
caption = paste0('Data: ', dataURL ,'\n Rproject:',gitURL)
) +
annotate('text',x=as.Date('2020-05-01'),y=100,label=paste0('Max. Gompertz ~ ',floor(dplyr::pull(filter(maxfit,Fit=='Gompertz'),Deceduti))))+
annotate('text',x=as.Date('2020-05-01'),y=50,label=paste0('Max. Logistic ~ ',floor(dplyr::pull(filter(maxfit,Fit=='Logistic'),Deceduti))))+
theme_light()
p
p<-ggplot(forecast,aes(data,Deceduti,color=Fit)) +
geom_line() +
geom_point(data=tbw_dpc,aes(as.Date(data),deceduti),color='black') +
xlab('')+
labs(
title = 'COVID-19 Italia - Previsione',
subtitle = paste0('Aggiornamento: ',today()),
caption = paste0('Data: ', dataURL ,'\n Rproject:',gitURL)
) +
annotate('text',x=as.Date('2020-05-01'),y=11000,label=paste0('Max. Gompertz ~ ',floor(dplyr::pull(filter(maxfit,Fit=='Gompertz'),Deceduti))))+
annotate('text',x=as.Date('2020-05-01'),y=9000,label=paste0('Max. Logistic ~ ',floor(dplyr::pull(filter(maxfit,Fit=='Logistic'),Deceduti))))+
theme_light()
p
ggsave('./PLOT/COVID19_previsione_italia_lin.png',p)
class(fit1_dpc)
class(fit1)
nr1 <- nlsResiduals(fit1)
install.packages('nlsResiduals')
nr1 <- nlsResiduals(fit1)
library(nlsTools)
library(nlsResiduals)
install.packages('nlstools')
library(nlstools)
nr1 <- nlsResiduals(fit1)
plot(nr1,which=0)
nr2 <- nlsResiduals(fit2)
plot(nr2)
plot(nr2,which=0)
plot(nr2,which=0,title='Logistic')
plot(nr1)
plot(nr2)
plot(nr1)
source('~/R/covid/mod_italy.R')
source('~/R/covid/mod_italy.R')
source('~/R/covid/mod_italy.R')
source('~/R/covid/mod_italy.R')
source('~/R/covid/mod_anomalies.r')
